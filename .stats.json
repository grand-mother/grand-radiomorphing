{"lines": {"blank": 334, "comment": 54, "docstring": 78, "code": 1194}, "pep8": {"count": 1550, "categories": [["2", "E101", "indentation contains mixed spaces and tabs"], ["13", "E111", "indentation is not a multiple of four"], ["10", "E114", "indentation is not a multiple of four (comment)"], ["3", "E115", "expected an indented block (comment)"], ["55", "E116", "unexpected indentation (comment)"], ["12", "E201", "whitespace after '('"], ["21", "E202", "whitespace before ')'"], ["32", "E203", "whitespace before ':'"], ["1", "E221", "multiple spaces before operator"], ["12", "E222", "multiple spaces after operator"], ["277", "E225", "missing whitespace around operator"], ["162", "E231", "missing whitespace after ','"], ["6", "E251", "unexpected spaces around keyword / parameter equals"], ["95", "E261", "at least two spaces before inline comment"], ["37", "E262", "inline comment should start with '# '"], ["200", "E265", "block comment should start with '# '"], ["95", "E266", "too many leading '#' for block comment"], ["1", "E271", "multiple spaces after keyword"], ["15", "E302", "expected 2 blank lines, found 1"], ["83", "E303", "too many blank lines (3)"], ["1", "E306", "expected 1 blank line before a nested definition, found 0"], ["4", "E402", "module level import not at top of file"], ["245", "E501", "line too long (110 > 79 characters)"], ["1", "E701", "multiple statements on one line (colon)"], ["1", "E722", "do not use bare 'except'"], ["3", "E741", "ambiguous variable name 'l'"], ["24", "W191", "indentation contains tabs"], ["42", "W291", "trailing whitespace"], ["95", "W293", "blank line contains whitespace"], ["2", "W391", "blank line at end of file"]]}, "doc": {"classes": {}, "functions": {"interpolate": ["core.py", 35, "Interpolate all traces from the (rescaled) closest neighbours\n\nArgs:\n    path0 (str): path to file with desired antenna positions\n    path1 (str): path to the simulations\n    path2 (str): path to the folder for final traces\n    zenith (float): zenith angle of the morphed shower, in degrees\n    azimuth (float): azimuth angle of the morphed shower, in degrees\n    scaled (bool): flag for interpolating from a non scaled shower"], "process": ["core.py", 794, "Rescale and interpolate the radio traces for all antennas\n\nArgs:\n    sim_dir (str): path to the simulated traces\n    shower (dict): properties of the requested shower\n    antennas (str): path the requested antenna positions\n    out_dir (str): path where the output traces should be dumped"], "scale": ["scaling.py", 395, "Scale all simulated traces to the shower parameters\n    "]}, "modules": {"core": ["core.py", 0, null, {"classes": {}, "functions": {"interpolate": ["core.py", 35, "Interpolate all traces from the (rescaled) closest neighbours\n\nArgs:\n    path0 (str): path to file with desired antenna positions\n    path1 (str): path to the simulations\n    path2 (str): path to the folder for final traces\n    zenith (float): zenith angle of the morphed shower, in degrees\n    azimuth (float): azimuth angle of the morphed shower, in degrees\n    scaled (bool): flag for interpolating from a non scaled shower"], "process": ["core.py", 794, "Rescale and interpolate the radio traces for all antennas\n\nArgs:\n    sim_dir (str): path to the simulated traces\n    shower (dict): properties of the requested shower\n    antennas (str): path the requested antenna positions\n    out_dir (str): path where the output traces should be dumped"]}, "modules": {}}], "scaling": ["scaling.py", 0, null, {"classes": {}, "functions": {"scale": ["scaling.py", 395, "Scale all simulated traces to the shower parameters\n    "]}, "modules": {}}]}}}