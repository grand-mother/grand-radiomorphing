{"lines": {"blank": 298, "comment": 62, "docstring": 436, "code": 1172}, "pep8": {"count": 418, "categories": [["3", "E111", "indentation is not a multiple of four"], ["3", "E113", "unexpected indentation"], ["6", "E114", "indentation is not a multiple of four (comment)"], ["1", "E116", "unexpected indentation (comment)"], ["135", "E265", "block comment should start with '# '"], ["1", "E266", "too many leading '#' for block comment"], ["245", "E501", "line too long (95 > 79 characters)"], ["1", "E722", "do not use bare 'except'"], ["3", "E741", "ambiguous variable name 'l'"], ["1", "E901", "IndentationError: unindent does not match any outer indentation level"], ["19", "W291", "trailing whitespace"]]}, "doc": {"classes": {}, "functions": {"interpolate": ["core.py", 35, "Interpolate all traces from the (rescaled) closest neighbours\n\nArgs:\n    path0 (str): path to file with desired antenna positions\n    path1 (str): path to the simulations\n    path2 (str): path to the folder for final traces\n    zenith (float): zenith angle of the morphed shower, in degrees\n    azimuth (float): azimuth angle of the morphed shower, in degrees\n    scaled (bool): flag for interpolating from a non scaled shower"], "process": ["core.py", 794, "Rescale and interpolate the radio traces for all antennas\n\nArgs:\n    sim_dir (str): path to the simulated traces\n    shower (dict): properties of the requested shower\n    antennas (str): path the requested antenna positions\n    out_dir (str): path where the output traces should be dumped"], "scale": ["scaling.py", 395, "Scale all simulated traces to the shower parameters\n    "]}, "modules": {"core": ["core.py", 0, null, {"classes": {}, "functions": {"interpolate": ["core.py", 35, "Interpolate all traces from the (rescaled) closest neighbours\n\nArgs:\n    path0 (str): path to file with desired antenna positions\n    path1 (str): path to the simulations\n    path2 (str): path to the folder for final traces\n    zenith (float): zenith angle of the morphed shower, in degrees\n    azimuth (float): azimuth angle of the morphed shower, in degrees\n    scaled (bool): flag for interpolating from a non scaled shower"], "process": ["core.py", 794, "Rescale and interpolate the radio traces for all antennas\n\nArgs:\n    sim_dir (str): path to the simulated traces\n    shower (dict): properties of the requested shower\n    antennas (str): path the requested antenna positions\n    out_dir (str): path where the output traces should be dumped"]}, "modules": {}}], "scaling": ["scaling.py", 0, null, {"classes": {}, "functions": {"scale": ["scaling.py", 395, "Scale all simulated traces to the shower parameters\n    "]}, "modules": {}}]}}}